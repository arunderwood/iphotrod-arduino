#!/usr/bin/python

import fcntl
import logging
import logging.handlers
import sys
import os
import re
import time
import RPi.GPIO as GPIO

logger = logging.basicConfig(level=logging.DEBUG)
handler = logging.handlers.SysLogHandler(address='/dev/log')
logger.addHandler(handler)

fd = sys.stdin.fileno()
fl = fcntl.fcntl(fd, fcntl.F_GETFL)
fcntl.fcntl(fd, fcntl.F_SETFL, fl | os.O_NONBLOCK)

GPIO.setmode(GPIO.BCM)
dtr = re.compile('.+TIOCM_DTR.+')
start = time.time()


def reset():
    pin = 22
    logging.info('Resetting pin %s', pin)
    GPIO.setup(pin, GPIO.OUT)
    GPIO.output(pin, GPIO.HIGH)
    time.sleep(0.12)
    GPIO.output(pin, GPIO.LOW)


def process():
    while True:
        try:
            duration = time.time() - start
            std_input = sys.stdin.readline().strip()
            logging.debug('Input: ', std_input)
            if dtr.match(std_input):
                reset()
                return
            elif duration > 5000:
                return
        except BaseException as error:
            logging.exception(error)
            continue


process()
GPIO.cleanup()
logging.info('Done with autoreset')
