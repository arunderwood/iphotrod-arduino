{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"metric",
				"metric_data\tstatement"
			],
			[
				"oai_",
				"oai_etag"
			],
			[
				"expected",
				"expected_oai"
			],
			[
				"oai",
				"oai_config\tstatement"
			],
			[
				"oa",
				"oai_config\tstatement"
			],
			[
				"te",
				"test_oai_id\tstatement"
			],
			[
				"m",
				"mock_CLOUDFRONT\tstatement"
			],
			[
				"re",
				"return_value"
			],
			[
				"ma",
				"matching_oai\tstatement"
			],
			[
				"Ind",
				"IndexError\tclass"
			],
			[
				"get",
				"get_oai"
			],
			[
				"exp",
				"expected_queues\tstatement"
			],
			[
				"ex",
				"expected"
			],
			[
				"tes",
				"test_queues\tstatement"
			],
			[
				"j",
				"json_response\tstatement"
			],
			[
				"q",
				"queue\tstatement"
			],
			[
				"qu",
				"queues\tstatement"
			],
			[
				"Ke",
				"KeyError\tclass"
			],
			[
				"se",
				"self"
			],
			[
				"tag",
				"tag_list\tparam"
			],
			[
				"va",
				"valid_message_json"
			],
			[
				"ret",
				"return_val\tstatement"
			],
			[
				"me",
				"metric_key\tstatement"
			],
			[
				"dump",
				"dumps\tfunction"
			],
			[
				"mes",
				"Message"
			],
			[
				"mess",
				"message"
			],
			[
				"moc",
				"mock_sns"
			],
			[
				"BAS",
				"BASE_PATH"
			],
			[
				"region",
				"region_mappings\tstatement"
			],
			[
				"RE",
				"REPORT_PERIOD_END"
			],
			[
				"ser",
				"service_dict\tstatement"
			],
			[
				"H",
				"HARBOUR_METRIC_NAMESPACE\tstatement"
			],
			[
				"ass",
				"assertEquals\tstatement"
			],
			[
				"lo",
				"load_event\tmodule"
			],
			[
				"dum",
				"dumps\tfunction"
			],
			[
				"conf",
				"config_item\tparam"
			],
			[
				"vol",
				"volume_id\tstatement"
			],
			[
				"att",
				"attachments\tstatement"
			],
			[
				"atta",
				"attachments"
			],
			[
				"WAR",
				"WARNING\tstatement"
			],
			[
				"rule",
				"rule_id\tstatement"
			],
			[
				"Harbour",
				"HarbourBounty"
			],
			[
				"pa",
				"payload\tparam"
			],
			[
				"interv",
				"intervals\tstatement"
			],
			[
				"inter",
				"interval_string\tstatement"
			],
			[
				"har",
				"get_harbour_labels"
			],
			[
				"dim",
				"dimensions\tstatement"
			],
			[
				"API",
				"API_KEY\tstatement"
			],
			[
				"pip",
				"pip_path\tstatement"
			],
			[
				"event",
				"eventDateTime\tstatement"
			],
			[
				"ev",
				"eventTime\tstatement"
			],
			[
				"K",
				"KeyError\tclass"
			],
			[
				"aws",
				"awsbillparse\tmodule"
			],
			[
				"tem",
				"temphumid\tstatement"
			],
			[
				"data",
				"data_file\twithstmt"
			],
			[
				"depl",
				"deployFile\tstatement"
			],
			[
				"csv",
				"csvreader\tparam"
			],
			[
				"du",
				"dumps\tfunction"
			],
			[
				"s3",
				"s3path"
			],
			[
				"filt",
				"filtered\tstatement"
			],
			[
				"repo",
				"reportfiles\tstatement"
			],
			[
				"a",
				"append\tfunction"
			],
			[
				"P",
				"ParameterValue"
			],
			[
				"f",
				"file"
			],
			[
				"test",
				"tests_directory"
			],
			[
				"caps",
				"caps_path"
			],
			[
				"Shard",
				"ShardCount"
			],
			[
				"Ac",
				"AccountId"
			],
			[
				"logg",
				"logging_buckets"
			],
			[
				"op",
				"operator"
			],
			[
				"stat",
				"statement"
			],
			[
				"col",
				"collection\tforstmt"
			],
			[
				"action",
				"action_wildcard"
			]
		]
	},
	"build_system": "PlatformIO",
	"build_system_choices":
	[
		[
			[
				[
					"PlatformIO",
					""
				],
				[
					"PlatformIO",
					"Build"
				],
				[
					"PlatformIO",
					"Clean"
				],
				[
					"PlatformIO",
					"Test"
				],
				[
					"PlatformIO",
					"Upload"
				],
				[
					"PlatformIO",
					"Upload using Programmer"
				],
				[
					"PlatformIO",
					"Upload SPIFFS image"
				],
				[
					"PlatformIO",
					"Update platforms and libraries"
				]
			],
			[
				"PlatformIO",
				"Build"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "inst",
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"shell",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"table",
				"SublimeLinter: Enable Linter"
			],
			[
				"anac",
				"Anaconda: McCabe complexity check"
			],
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"markd",
				"Preferences: MarkdownEditing Settings â€“ User"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"project manag",
				"Project Manager: Add New Project"
			],
			[
				"git sta",
				"Git: Status"
			],
			[
				"project",
				"Project: Add Folder"
			],
			[
				"package",
				"Package Control: Satisfy Dependencies"
			]
		],
		"width": 546.0
	},
	"console":
	{
		"height": 183.0,
		"history":
		[
			"ls",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/rpi/avrdude-autoreset",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/rpi/autoreset",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/Sleepy-Pi-Setup.sh",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/src/LowVoltageShutdown.ino",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/.travis.yml",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/rpi/80-sleepypi.rules",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/Makefile",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/Readme.md",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/platformio.ini",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/rpi-installation.sh",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/rpi/boards.txt",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/lib/readme.txt",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/lib/SleepyPi2/SleepyPi2.cpp",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/lib/SleepyPi2/SleepyPi2.h",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/platformio.sublime-workspace",
		"/Users/andrewunderwood/checkouts/iphotrod-arduino/platformio.sublime-project",
		"/Users/andrewunderwood/checkouts/cf_route53_health_checks/cloudformation/policies/default-stack-policy.json",
		"/Users/andrewunderwood/checkouts/cf_route53_health_checks/smithy.yaml",
		"/Users/andrewunderwood/checkouts/cf_route53_health_checks/healthcheck.json",
		"/Users/andrewunderwood/checkouts/opseng-docs/.gitignore",
		"/Users/andrewunderwood/checkouts/opseng-docs/regen-doctoc.sh",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/Dockerfile",
		"/Users/andrewunderwood/checkouts/pfsense_metrics_to_datadog/Makefile",
		"/Users/andrewunderwood/checkouts/pfsense_metrics_to_datadog/.gitignore",
		"/Users/andrewunderwood/checkouts/cf_cdn/.gitignore",
		"/Users/andrewunderwood/checkouts/cf_cdn/smithy.yaml",
		"/Users/andrewunderwood/checkouts/cf_cdn/oa_custom_resource/requirements.txt",
		"/Users/andrewunderwood/checkouts/cf_cdn/oa_custom_resource/requirements_dev.txt",
		"/Users/andrewunderwood/checkouts/cf_cdn/oa_custom_resource/test/__init__.py",
		"/Users/andrewunderwood/checkouts/cf_cdn/oa_custom_resource/__init__.py",
		"/Users/andrewunderwood/checkouts/cf_cdn/OA_custom_resource/__init__.py",
		"/Users/andrewunderwood/checkouts/cf_cdn/cloudformation/dev",
		"/Users/andrewunderwood/Downloads/cfn-s3-x-region-replication_final.yml",
		"/Users/andrewunderwood/checkouts/cloudformation_deployer/scripts/lambda_function/config_handler.py",
		"/Users/andrewunderwood/checkouts/cloudformation_deployer/scripts/lambda_function/main.py",
		"/Users/andrewunderwood/checkouts/cloudformation_deployer/scripts/lambda_function/stack_handler.py",
		"/Users/andrewunderwood/checkouts/cloudformation_deployer/scripts/lambda_function/settings.py",
		"/Users/andrewunderwood/checkouts/cloudformation_deployer/scripts/lambda_function/requirements.txt",
		"/Users/andrewunderwood/checkouts/cloudformation_deployer/scripts/lambda_function/__init__.py",
		"/Users/andrewunderwood/checkouts/opseng-docs/docs/domain-policies.md",
		"/Users/andrewunderwood/checkouts/opseng-docs/docs/aws-accounts.md",
		"/Users/andrewunderwood/checkouts/opseng-docs/docs/about.md",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/requirements_dev.txt",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/deploy.json",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/taskqueue_metrics_fetch/test/gae_json_response.json",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/cloudformation/prod/us-east-1/taskqueue_metrics-fetch-parameters.json",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/cloudformation/dev/us-east-1/taskqueue_metrics-fetch-parameters.json",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/taskqueue_metrics_fetch/test/event.json",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/run_local.sh",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/requirements.txt",
		"/Users/andrewunderwood/Downloads/config-BizzaroRouter.bizzarosn.com-20170912194142 copy.xml",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/smithy.yaml",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/taskqueue_metrics_fetch/test/test_taskqueue_metrics_fetch.py",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/taskqueue_metrics_fetch/taskqueue_metrics_fetch.py",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/cloudformation/taskqueue_metrics_fetch.yaml",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/Readme.md",
		"/Users/andrewunderwood/Downloads/ISEAGE Management.visz",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fetch/.pylintrc",
		"/Users/andrewunderwood/Downloads/taskqueue_metrics_fanout.png",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fanout/local_test.sh",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fanout/lambda.yaml",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fanout/iam_policy_template.json",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fanout/.gitignore",
		"/Users/andrewunderwood/checkouts/taskqueue_metrics_fanout/setup.cfg",
		"/Users/andrewunderwood/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/andrewunderwood/go/src/github.com/arunderwood/stringutil/reverse.go",
		"/Users/andrewunderwood/go/src/github.com/arunderwood/stringutil/reverse_test.go",
		"/Users/andrewunderwood/go/src/github.com/arunderwood/hello-go/hello.go",
		"/Users/andrewunderwood/go/src/github.com/arunderwood/hello-go/Readme.md",
		"/Users/andrewunderwood/go/src/github.com/Workiva/app_int_collection_gateway/wrapper_schema.json",
		"/Users/andrewunderwood/go/src/github.com/Workiva/app_int_collection_gateway/socket/harbour_writer.go",
		"/Users/andrewunderwood/go/src/github.com/Workiva/app_int_collection_gateway/telemetry/telemetry_handler.go",
		"/Users/andrewunderwood/go/src/github.com/Workiva/app_int_collection_gateway/tracing/tracing_handler.go",
		"/Users/andrewunderwood/go/src/github.com/Workiva/app_int_collection_gateway/config/config.go",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/smithy.yaml",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/aws-saml-broker/aws-saml-broker.py",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/aws-saml-broker.conf",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/README.md",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/build_dependencies/requirements.txt",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/build_dependencies/build_deps.sh",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/test_lambda_local.sh",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/lambdatest.Dockerfile",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/build_dependencies/Dockerfile",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/Dockerfile",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/libs/OpenSSL/_util.py",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/deploy.json",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/aws-saml-broker/conf/metadata-corp.xml",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/cloudformation/saml_broker.yaml",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/.gitignore",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/lib_build/Dockerfile",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/requirements.txt",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/aws-saml-broker/config_helper.py",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/start.py",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/config_helper.py",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/conf/sample_config.py",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/aws-saml-broker/conf/.gitkeep",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/aws-saml-broker/conf/sample_config.py",
		"/Users/andrewunderwood/checkouts/aws-saml-broker/okta.py",
		"/Users/andrewunderwood/checkouts/BSNstatus2/app/templates/base.html",
		"/Users/andrewunderwood/checkouts/BSNstatus2/app/templates/index.html",
		"/Users/andrewunderwood/checkouts/BSNstatus2/app/models.py",
		"/Users/andrewunderwood/checkouts/BSNstatus2/db_migrate.py",
		"/Users/andrewunderwood/checkouts/BSNstatus2/db_create.py",
		"/Users/andrewunderwood/checkouts/BSNstatus2/app/views.py",
		"/Users/andrewunderwood/checkouts/BSNstatus2/app/forms.py",
		"/Users/andrewunderwood/checkouts/BSNstatus2/app/__init__.py",
		"/Users/andrewunderwood/checkouts/BSNstatus2/config.py",
		"/Users/andrewunderwood/checkouts/BSNstatus2/run.py",
		"/Users/andrewunderwood/checkouts/BSNstatus2/requirements.txt",
		"/Users/andrewunderwood/.bash_prompt.sh",
		"/Users/andrewunderwood/.bash_profile",
		"/private/etc/profile",
		"/Users/andrewunderwood/.bashrc",
		"/Users/andrewunderwood/checkouts/gli-pubsub-collector/cloudformation/gli-pubsub-collector.yaml",
		"/Users/andrewunderwood/checkouts/gli-pubsub-collector/deploy.json",
		"/Users/andrewunderwood/checkouts/gli-pubsub-collector/README.md",
		"/Users/andrewunderwood/checkouts/gli-pubsub-collector/server.js",
		"/Users/andrewunderwood/checkouts/gli-pubsub-collector/packages.json",
		"/Users/andrewunderwood/checkouts/gli-pubsub-collector/cloudformation/dev/us-east-1/gli-pubsub-collector-dev-parameters.json",
		"/Users/andrewunderwood/checkouts/gli-pubsub-collector/cloudformation/prod/us-east-1/gli-pubsub-collector-prod-parameters.json",
		"/Users/andrewunderwood/checkouts/gli-pubsub-collector/cloudformation/prod/eu-west-1/gli-pubsub-collector-prod-eu-parameters.json",
		"/Users/andrewunderwood/checkouts/shipyard-harbour/cloudformation/prod/us-east-1/sandbox.json",
		"/Users/andrewunderwood/checkouts/shipyard-harbour/cloudformation/prod/us-east-1/prod.json",
		"/Users/andrewunderwood/checkouts/shipyard-harbour/cloudformation/prod/us-east-1/pentest.json",
		"/Users/andrewunderwood/checkouts/shipyard-harbour/cloudformation/prod/us-east-1/demo.json",
		"/Users/andrewunderwood/checkouts/shipyard-harbour/cloudformation/prod/eu-west-1/prod.json",
		"/Users/andrewunderwood/checkouts/shipyard-harbour/cloudformation/corp/us-east-1/inf-tools.json",
		"/Users/andrewunderwood/checkouts/shipyard-harbour/cloudformation/test.py"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"TIOCM_DTR",
			"pip",
			"apt-get",
			"dirname",
			"dir",
			"master",
			"home",
			"/home",
			"master",
			"sed",
			"#",
			"comment",
			"boot",
			"hwclock-set",
			"rtc",
			"config.txt",
			"dirname",
			"avr",
			"avrd",
			"git",
			"wget",
			"exit",
			"cd \"$(dirname \"$0\")\" || exit 1",
			"\"$(dirname \"$0\")\"",
			"cd \"$(dirname \"$0\")\" || exit 1",
			"## Ensure working directory is where the script is located\ncd \"$(dirname \"$0\")\" || exit 1",
			"supply_voltage",
			"curr",
			"wire",
			"SleepyPi",
			"time",
			"millis()",
			"kONBUTTONTIME_MS"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"millis_time"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 310.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "PlatformIO",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 291.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
